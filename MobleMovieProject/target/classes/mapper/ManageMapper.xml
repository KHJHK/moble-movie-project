<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movie.dao.ManageDao">

<!-- 관리자 페이지 -->
	<select id="manageMain" resultType="com.movie.vo.MemberVo">
		SELECT member_auth
		FROM member
		WHERE member_account = #{member_account}
	</select>


<!-- 회원 -->
	<!-- 관리자 리스트 출력 -->
	<select id="adminList" resultType="com.movie.vo.MemberVo" >
        SELECT member_account, member_name, member_email, member_nickname,
        member_birth, member_reg_date, member_modify_date
          FROM member
         WHERE member_auth = #{member_auth}
    </select>

	<!-- 회원 리스트 출력 -->
	 <select id="userList" resultType="com.movie.vo.MemberVo" >
        SELECT member_account, member_name, member_email, member_nickname,
        member_birth, member_reg_date, member_modify_date
          FROM member
         WHERE member_auth = #{member_auth}
    </select>
    
	<!-- 탈퇴 회원 리스트 출력 -->
	<select id="resignList" resultType="com.movie.vo.MemberVo" >
        SELECT member_account, member_name, member_email, member_nickname,
        member_birth, member_reg_date, member_modify_date
          FROM member
         WHERE member_auth = #{member_auth}
    </select>
    
	<!-- 강제 탈퇴 -->
 	<update id="deleteMember" >
    	UPDATE member SET
    	member_auth = #{member_auth},
    	member_modify_date = #{member_modify_date}
    	where member_account = #{member_account} and
    	member_email = #{member_email}
    </update>
    	
    	
<!-- 공지사항 -->
	<!-- 관리자 페이지 공지사항 리스트 -->
	<select id="manageNoticeList" resultType="com.movie.vo.NoticeVo" >
        SELECT notice_id, category_name, notice_title, 
        notice_reg_date, notice_count
          FROM notice
          INNER JOIN category
          ON notice.category_id = category.category_id
          WHERE notice_flag = #{notice_flag}
    </select>

	<!-- 관리자 페이지 공지사항 세부 내용 -->
	<select id="manageNoticeView" resultType="com.movie.vo.NoticeVo" >
        SELECT *
          FROM notice
          INNER JOIN category
          ON notice.category_id = category.category_id
          INNER JOIN member
          ON notice.member_id = member.member_id
          WHERE notice_id = #{notice_id}
    </select> 

    <!-- 관리자 페이지 공지사항 추가 -->
    <insert id="manageNoticeAdd" parameterType="com.movie.vo.NoticeVo">
    	INSERT INTO notice(
    	member_id, category_id, notice_reg_date, notice_title,
    	notice_content, notice_count, notice_flag)
    	VALUES(#{member_id},#{category_id},#{notice_reg_date},#{notice_title},
    	#{notice_content}, 0 , "Y")
    </insert>
    
    <!-- 관리자 페이지 공지사항 수정 -->
     <update id="manageNoticeUpdate">
    	UPDATE notice SET
    	category_id = #{category_id},
    	notice_title = #{notice_title},
    	notice_content = #{notice_content}
    	where notice_id = #{notice_id}
    </update>    
    
    <!-- 관리자 페이지 공지사항 삭제 -->
    <update id="manageNoticeDelete" >
    	UPDATE notice SET
    	notice_flag = "N"
    	where notice_id = #{notice_id}
    </update>  
    
  
<!-- Q & A -->
	<!-- 관리자 페이지 Q & A 리스트 -->
	<select id="manageQuestionList" resultType="com.movie.vo.QuestionVo" >
        SELECT question_id, category_name, question_title, 
        member_account, question_reg_date
          FROM question
          INNER JOIN category
          ON question.category_id = category.category_id
          INNER JOIN member
          ON question.member_id = member.member_id
          where question_flag = #{question_flag}
    </select>
	
	<!-- 관리자 페이지 Q & A 세부 내용 -->
	<select id="manageQuestionView" resultType="com.movie.vo.QuestionVo" >
        SELECT *
          FROM question
          INNER JOIN category
          ON question.category_id = category.category_id
          INNER JOIN member
          ON question.member_id = member.member_id
          WHERE question_id = #{question_id}
    </select> 
	
	<!-- 관리자 페이지 질문 삭제 -->
	<update id="manageQuestionDelete" >
    	UPDATE question SET
    	question_flag = "N"
    	where question_id = #{question_id}
    </update> 
    
    <!-- 관리자 페이지 답변 내용 --> 
    <select id="manageAnswerView" resultType="com.movie.vo.AnswerVo" >
        SELECT *
          FROM answer
          INNER JOIN question
          ON answer.question_id = question.question_id
          INNER JOIN member
          ON answer.member_id = member.member_id
          WHERE answer.question_id = #{question_id}
    </select> 


    <!-- 관리자 페이지 답변 작성 -->
    <insert id="manageAnswerAdd" parameterType="com.movie.vo.AnswerVo">
    	INSERT INTO answer(
    	question_id, member_id, answer_reg_date,
    	answer_title, answer_content)
    	VALUES(#{question_id}, #{member_id}, #{answer_reg_date},
    	#{answer_title}, #{answer_content})
    </insert>
    
    <!-- 관리자 페이지 답변 수정 -->
    <update id="manageAnswerUpdate" >
    	UPDATE answer SET
    	answer_title = #{answer_title},
    	answer_content = #{answer_content}
    	where answer_id = #{answer_id}
    </update> 
    
    <!-- 관리자 페이지 답변 삭제 -->
    <delete id="manageAnswerDelete" >
    	DELETE 
    	from answer
    	where answer_id = #{answer_id}
    </delete> 
    
 
</mapper>